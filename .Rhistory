install.packages(c("ggplot2", "plyr", "hexbin", "gcookbook"))
install.packages("ggplot2")
install.packages("ggplot2")
install.packages('ggplot2',dependencies = TRUE)
install.packages("ggplot2", repos="http://cran.cnr.berkeley.edu")
library(ggplot2)
library(ggplot2)
install.packages("rpart")
install.packages("ggplot2")
install.packages("tree")
install.packages("randomForest")
install.packages("mgcv")
install.packages("gam")
install.packages("ggplot2")
install.packages("caret")
library(caret)
install.packages("geoR")
library(geoR)
install.packages("gstat")
install.packages("devtools")
library(devtools)
update.packages(checkBuilt=TRUE, ask=FALSE)
library(devtools)
install.packages("devtools")
install.packages("devtools")
installed.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
setwd("/media/dr/Data/2016/TPC IPA 2016/code_data")
library(pcaMethods) # for pcaMethods package
library(cluster) # for cluster analysis
#library(readxl) # for opening data directly from xls format
library(rpart)
library(party)
library(vegan)
library(gam)
df <- read.csv("dataPoplain.csv", header=T) # load data
dim(df)
cor.tab <- cor(df)
View(df)
View(df)
cor.tab <- cor(df[5:18])
write.csv(cor.tab, "cortab.csv")
univar.tab <- describe(df)
univar.tab <- describe(df)
library(psych)
install.packages("psych")
library(psych) # univar description
univar.tab <- describe(df)
write.csv(univar.tab, "univar.csv")
univar.tab
pairs(df[5:18],
lower.panel=panel.smooth,
upper.panel=NULL,
pch=20)
pca <- pca(df,
method = "svdImpute",
scale = "uv",
center = T,
nPcs = 5,
evalPcs = 1:5)
summary(pca)
plotPcs(pca, Pcs = 1:5)
plot(pca, type="lines")
slplot(pca) # default function in pcamethods but not big enough
loadings(pca) # loadings of each variables
write.csv(loadings(pca), "loadings.csv")
pca
write.csv(scores(pca), "scores.csv")
scores(pca) # scores of each samples respectively to each variables
pca <- pca(df,
method = "svdImpute",
scale = "uv",
center = T,
nPcs = 5,
evalPcs = 1:5)
summary(pca)
loadings(pca) # loadings of each variables
scores(pca)
plot(scores(pca),
main = "Case scores",
sub = "Gorontalo area")
abline(v=0, h=0,
col = "gray70")
text(scores(pca), row.names(df),
cex=0.6,
pos=2,
col="blue", offset=0)
scores(pca)
df <- read.csv("dataPoplain.csv", header=T) # load data
pca <- pca(df,
method = "svdImpute",
scale = "uv",
center = T,
nPcs = 5,
evalPcs = 1:5)
loadings(pca) # loadings of each variables
plotPcs(pca, Pcs = 1:5)
plot(pca, type="lines")
slplot(pca) # default function in pcamethods but not big enough
loadings(pca) # loadings of each variables
write.csv(loadings(pca), "loadings.csv")
scores(pca)
row.names(df) <- df$id # setting row names
dim(df)
row.names(df) <- df$sites # setting row names
df <- read.csv("dataPoplain.csv", header=T) # load data
row.names(df) <- df$sites # setting row names
row.names(df) <- df$sites # setting row names
df <- read.csv("dataPoplain.csv", header=T) # load data
row.names(df) <- df$sites # setting row names
df <- read.csv("dataPoplain.csv", header=T) # load data
row.names(df) <- df$sites # setting row names
pca <- pca(df,
method = "svdImpute",
scale = "uv",
center = T,
nPcs = 5,
evalPcs = 1:5)
summary(pca)
## Evaluating results
plotPcs(pca, Pcs = 1:5)
plot(pca, type="lines")
slplot(pca) # default function in pcamethods but not big enough
loadings(pca) # loadings of each variables
write.csv(loadings(pca), "loadings.csv")
scores(pca)
plot.new()
par(mfrow=c(1,2))
plot(loadings(pca),
pch = 20,
main = "Variable loadings",
sub = "Gorontalo area")
text(loadings(pca),
row.names(loadings(pca)),
cex=0.6,
pos=1,
col="blue")
abline(v=0, h=0,
col = "gray70")
plot(scores(pca),
main = "Case scores",
sub = "Gorontalo area")
abline(v=0, h=0,
col = "gray70")
text(scores(pca), row.names(df),
cex=0.6,
pos=2,
col="blue", offset=0)
